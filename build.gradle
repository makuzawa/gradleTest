/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */



import org.ajoberstar.grgit.*
buildscript {

  repositories { 
      mavenCentral()
       }
  dependencies { 
      classpath 'org.ajoberstar:gradle-git:1.7.2'
       }
}
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'jacoco'
    
}

def targetProjectDir = 'build/dependProject'
def targetGitRepo = 'https://github.com/makuzawa/FilePerformanceTest.git'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
    testImplementation 'org.junit.platform:junit-platform-launcher'
   	testImplementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
	implementation 'org.eclipse.jetty:jetty-servlet:9.4.30.v20200611'
	// https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
	implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
	implementation files('build/dependProject/test.jar')
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	// https://mvnrepository.com/artifact/gradle.plugin.gradle.jacoco/jacoco-diff-coverage
	//implementation group: 'gradle.plugin.gradle.jacoco', name: 'jacoco-diff-coverage', version: '0.9.4'
	implementation 'org.jacoco:org.jacoco.agent:0.8.8'
	implementation 'org.jacoco:org.jacoco.ant:0.8.8'
	implementation 'org.jacoco:org.jacoco.core:0.8.8'
	implementation 'org.jacoco:org.jacoco.report:0.8.8'
	// https://mvnrepository.com/artifact/org.ow2.asm/asm
	implementation group: 'org.ow2.asm', name: 'asm', version: '9.3'
	
	
}

application {
    // Define the main class for the application.
    mainClass = 'GradleExample.App'
}

compileJava {
sourceCompatibility = '1.8' // -source
targetCompatibility = '1.8' // -target
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task cleanLibs(type: Delete) {
  delete 'packingLib'
  followSymlinks = true
}


 task copyAllDependencies(type: Copy) {
 	dependsOn 'cleanLibs'
    //referring to the 'compile' configuration
    from configurations.runtimeClasspath
    from configurations.testCompileClasspath
    into 'packingLib'
 }


task cleanTargetProjectDir(type: Delete) {
  delete targetProjectDir
  followSymlinks = true
}

task cloneTargetRepository  {
	dependsOn 'cleanTargetProjectDir'
	doLast{
 	 def grgit = Grgit.clone(dir: file(targetProjectDir), uri: targetGitRepo)
 	 println grgit.describe()
 	 grgit.close()
	}
	
}

